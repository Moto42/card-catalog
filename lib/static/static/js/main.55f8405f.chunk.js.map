{"version":3,"sources":["components/Tabber/Tabsbar.js","components/Tabber/TabsBox.js","components/Tabber/index.js","components/Tabber/Tabber.js","components/BookAdder/BookAdderForm.js","components/BookAdder/BookAdder.js","components/BookAdder/index.js","components/StackAdder/StackAdderForm.js","components/StackAdder/StackAdder.js","components/StackAdder/index.js","components/BookSearch/BookListing.js","components/BookSearch/BooksListDisplay.js","components/BookSearch/index.js","components/BookSearch/BookSearch.js","App.js","serviceWorker.js","index.js"],"names":["Tabsbar","_this","this","buttons","props","children","map","c","react_default","a","createElement","onClick","changeTab","tabName","Component","TabsBox","filter","displayTab","Tabber","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","bind","assertThisInitialized","defaultTab","setState","Tabber_Tabsbar","Tabber_TabsBox","BookAdderForm","responseFeedback","stacksList","formData","title","authorFirst","authorLast","publisher","publishedYear","upc","isbn","format","shelfLocation","genre","subjects","formDataUpdater","handleSubmit","acc","cur","concat","container","name","id","_this2","req","XMLHttpRequest","open","onreadystatechange","readyState","stacks","JSON","parse","responseText","reduce","stackReducer","firstKey","keys","send","event","key","target","value","newFormData","objectSpread","console","log","_this3","preventDefault","payloadData","payload","stringify","status","setRequestHeader","getStacksList","selectionList","k","onChange","type","placeholder","peholder","list","React","BookAdder","className","BookAdder_BookAdderForm","StackAdderForm","serverResponse","building","floor","room","containerType","description","containerTypes","StackAdder","components_StackAdder_StackAdderForm","BookListing","book","BooksListDisplay","listings","booksList","b","BookSearch_BookListing","BookSearch","books","toConsumableArray","getBookList","BookSearch_BooksListDisplay","App","components_Tabber","components_BookSearch","components_StackAdder","components_BookAdder","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.55f8405f.chunk.js","sourcesContent":["import React, {Component } from 'react';\r\n\r\nclass Tabsbar extends Component {\r\n\r\n\r\n\r\n  render(){\r\n    const buttons = this.props.children.map( c => <button onClick={()=>this.props.changeTab(c.props.tabName)}>{c.props.tabName}</button> );\r\n    return (\r\n      <div>\r\n        {buttons}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Tabsbar\r\n","import React, { Component } from 'react';\r\n\r\nclass TabsBox extends Component {\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n        {this.props.children.filter(c => c.props.tabName === this.props.displayTab)}\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default TabsBox;\r\n","import Tabber from './Tabber';\r\nexport default Tabber;\r\n","import React, { Component } from 'react';\r\nimport TabsBar from './Tabsbar';\r\nimport TabsBox from './TabsBox';\r\n\r\nclass Tabber extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      displayTab : '',\r\n    }\r\n    this.changeTab = this.changeTab.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    if(this.props.defaultTab){\r\n      this.setState({displayTab : this.props.defaultTab})\r\n    } else {\r\n      this.setState({displayTab : this.props.children[0].props.tabName})\r\n    }\r\n  }\r\n\r\n  changeTab(tabName) {\r\n    this.setState({displayTab : tabName});\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div>\r\n        <TabsBar changeTab = {this.changeTab}>\r\n          {this.props.children}\r\n        </TabsBar>\r\n        <TabsBox displayTab = {this.state.displayTab}>\r\n          {this.props.children}\r\n        </TabsBox>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Tabber;\r\n","import React from 'react';\r\n// import './BookAdderForm.css';\r\n\r\n\r\n\r\n\r\nclass BookAdderForm extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      responseFeedback: '',\r\n      stacksList : {},\r\n      formData : {\r\n        title        : '',\r\n        authorFirst  : '',\r\n        authorLast   : '',\r\n        publisher    : '',\r\n        publishedYear: '',\r\n        upc          : '',\r\n        isbn         : '',\r\n        format       : '',\r\n        shelfLocation: '',\r\n        state        : '',\r\n        genre        : '',\r\n        subjects     : '',\r\n      },\r\n    };\r\n    this.formDataUpdater = this.formDataUpdater.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  };\r\n  stackReducer(acc,cur) {\r\n    acc[`${cur.container}-${cur.name}`]=cur.id;\r\n    return acc;\r\n  }\r\n\r\n  getStacksList(){\r\n    const req = new XMLHttpRequest();\r\n    req.open(\"GET\",'/api/stacks',true);\r\n    req.onreadystatechange = () => {\r\n      if(req.readyState === 4){\r\n        const data = JSON.parse(req.responseText);\r\n        const stacks = data.reduce(this.stackReducer,{});\r\n        const firstKey = Object.keys(stacks)[0];\r\n        this.setState({stacksList: stacks});\r\n        this.setState({shelfLocation: firstKey});\r\n      }\r\n    }\r\n    req.send();\r\n  }\r\n\r\n  formDataUpdater(event){\r\n    const key = event.target.id;\r\n    const value = event.target.value;\r\n\r\n    const newFormData = {...this.state.formData};\r\n    newFormData[key]=value;\r\n    this.setState({formData: newFormData});\r\n  }\r\n\r\n  handleResponse(){\r\n    // TODO: add feedback for data submission.\r\n    console.log('HTML Response: 724, This line should be unreachable.')\r\n  }\r\n\r\n  handleSubmit(event){\r\n    event.preventDefault();\r\n    const payloadData = {...this.state.formData}\r\n    // payloadData.shelfLocation = this.state.stacksList[payloadData.shelfLocation]\r\n    payloadData.shelfLocation = payloadData.shelfLocation?\r\n      this.state.stacksList[payloadData.shelfLocation] :\r\n      this.state.stacksList[Object.keys(this.state.stacksList)[0]];\r\n    const payload = JSON.stringify(payloadData);\r\n    const req = new XMLHttpRequest();\r\n    req.onreadystatechange = () => {\r\n      if(req.readyState === 4){\r\n        switch(req.status) {\r\n          case 200:\r\n            this.setState({responseFeedback:`Successfully added ${this.state.formData.title} to database.`});\r\n            const emptyFormData = {\r\n              title        : '',\r\n              authorFirst  : '',\r\n              authorLast   : '',\r\n              publisher    : '',\r\n              publishedYear: '',\r\n              upc          : '',\r\n              isbn         : '',\r\n              format       : '',\r\n              state        : '',\r\n              genre        : '',\r\n              subjects     : '',\r\n            };\r\n            this.setState({formData:emptyFormData});\r\n            break;\r\n          case 500:\r\n            this.setState({responseFeedback:`An error has occured ${this.state.formData.title} not added to database`});\r\n            break;\r\n          default:\r\n            this.setState({responseFeedback:`Something unexpected has occured. status was: ${req.status}`});\r\n            break;\r\n        }\r\n      }\r\n    };\r\n    req.open('POST','api/books',true);\r\n    req.setRequestHeader('Content-Type','application/json');\r\n    req.send(payload);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getStacksList();\r\n  }\r\n\r\n  render(){\r\n    const selectionList = Object.keys(this.state.stacksList).map(k=><option> {k} </option>)\r\n\r\n    return (<div id='StackAdderContainer'>\r\n    <form id='BookAdderForm'>\r\n      <label> title:         <input onChange={this.formDataUpdater} value={this.state.formData.name}  type  ='text' id ='title' />        </label><br/>\r\n      <label> authorFirst:   <input onChange={this.formDataUpdater} value={this.state.formData.name}  type  ='text' id ='authorFirst' />  </label><br/>\r\n      <label> authorLast:    <input onChange={this.formDataUpdater} value={this.state.formData.name}  type  ='text' id ='authorLast' />   </label><br/>\r\n      <label> genre:         <input onChange={this.formDataUpdater} value={this.state.formData.name}  type  ='text' id ='genre' placeholder='Seperate, each, genre, with, a, comma'/>    </label><br/>\r\n      <label> subjects:      <input onChange={this.formDataUpdater} value={this.state.formData.name}  type  ='text' id ='subjects' peholder='Seperate, each, genre, with, a, comma'/>    </label><br/>\r\n      <label> publisher:     <input onChange={this.formDataUpdater} value={this.state.formData.name}  type  ='text' id ='publisher' />    </label><br/>\r\n      <label> publishedYear: <input onChange={this.formDataUpdater} value={this.state.formData.name}  type  ='text' id ='publishedYear' /></label><br/>\r\n      <label> upc:           <input onChange={this.formDataUpdater} value={this.state.formData.name}  type  ='text' id ='upc' />          </label><br/>\r\n      <label> isbn:          <input onChange={this.formDataUpdater} value={this.state.formData.name}  type  ='text' id ='isbn' />         </label><br/>\r\n      <label> format:        <input onChange={this.formDataUpdater} value={this.state.formData.name}  type  ='text' id ='format' list='formatList' />       </label><br/>\r\n        <datalist id='formatList'>\r\n          <option>Paperback</option>\r\n          <option>Hardback</option>\r\n          <option>DVD</option>\r\n        </datalist>\r\n      <label>\r\n        shelfLocation:\r\n        <select onChange={this.formDataUpdater} type  ='text' id ='shelfLocation' >\r\n          {selectionList}\r\n        </select>\r\n      </label><br/>\r\n      <label> condition:     <input onChange={this.formDataUpdater} value={this.state.formData.name}  type  ='text' id ='state' />        </label><br/>\r\n      <datalist id='conditionList'>\r\n        <option>Perfect</option>\r\n        <option>Used</option>\r\n        <option>Damaged</option>\r\n        <option>Falling Apart</option>\r\n      </datalist>\r\n      <button onClick={this.handleSubmit}>Submit</button>\r\n      <div id='serverResponse'>{this.state.responseFeedback}</div>\r\n    </form>\r\n\r\n    </div>)\r\n  }\r\n}\r\n\r\nexport default BookAdderForm;\r\n","import React from 'react';\r\nimport BookAdderForm from './BookAdderForm';\r\n\r\nfunction  BookAdder() {\r\n  return ( <div className='.compBorder'>\r\n  <BookAdderForm />\r\n  </div> )\r\n}\r\n\r\n\r\nexport default BookAdder;\r\n","import BookAdder from './BookAdder';\r\n\r\nexport default BookAdder;\r\n","import React from 'react';\r\nimport './StackAdderForm.css';\r\n\r\nclass StackAdderForm extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      serverResponse : '',\r\n      formData : {\r\n        name         : '',\r\n        building     : '',\r\n        floor        : '',\r\n        room         : '',\r\n        container    : '',\r\n        containerType: '',\r\n        description  : '',\r\n      },\r\n      containerTypes : [],\r\n    };\r\n    this.formDataUpdater = this.formDataUpdater.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  };\r\n\r\n  formDataUpdater(event){\r\n    const key = event.target.id;\r\n    const value = event.target.value;\r\n\r\n    const newFormData = {...this.state.formData};\r\n    newFormData[key]=value;\r\n\r\n    this.setState({formData: newFormData})\r\n  }\r\n\r\n  handleResponse(){\r\n    console.log('HTML Response: 724, This line should be unreachable.')\r\n  }\r\n\r\n  handleSubmit(event){\r\n    const payload = JSON.stringify(this.state.formData);\r\n    const req = new XMLHttpRequest();\r\n    req.onreadystatechange = () => {\r\n      if(req.readyState === 4) {\r\n        switch (req.status) {\r\n          case 200:\r\n            this.setState({serverResponse:`New container \"${this.state.formData.name}\" successfully added to the stacks.`})\r\n            break;\r\n          case 500:\r\n            this.setState({serverResponse:`Error adding new container to stacks.`})\r\n            break;\r\n          default:\r\n            this.setState({serverResponse:`Something unexpected has occured. Server response code: ${req.status}`})\r\n            break;\r\n        }\r\n      }\r\n    };\r\n    req.open('POST','api/stacks',true);\r\n    req.setRequestHeader('Content-Type','application/json');\r\n    req.send(payload);\r\n  }\r\n\r\n  render(){\r\n    return (<div id='StackAdderContainer'>\r\n    <form id='StackAdderForm'>\r\n      <label> name         : <input onChange={this.formDataUpdater} value={this.state.formData.name}  type  ='text' id ='name' /></label><br/>\r\n      <label> building     : <input onChange={this.formDataUpdater} value={this.state.formData.building}  type  ='text' id ='building' /></label><br/>\r\n      <label> floor        : <input onChange={this.formDataUpdater} value={this.state.formData.floor}  type  ='text' id ='floor' /></label><br/>\r\n      <label> room         : <input onChange={this.formDataUpdater} value={this.state.formData.room}  type  ='text' id ='room' /></label><br/>\r\n      <label> container    : <input onChange={this.formDataUpdater} value={this.state.formData.container}  type  ='text' id ='container' /></label><br/>\r\n      <label> containerType: <input onChange={this.formDataUpdater} value={this.state.formData.containerType}  type  ='text' id ='containerType' /></label><br/>\r\n      <label> description  : <textarea onChange={this.formDataUpdater} value={this.state.formData.description}  id ='description' /></label><br/>\r\n      <button type='button' onClick={this.handleSubmit}>submit</button>\r\n    </form>\r\n    <div id='serverResponse'>\r\n      {this.state.serverResponse}\r\n    </div>\r\n    </div>)\r\n  }\r\n}\r\n\r\nexport default StackAdderForm;\r\n","import React from 'react';\r\nimport StackAdderForm from './StackAdderForm';\r\n\r\nfunction StackAdder(){\r\n  return ( <div>\r\n    <StackAdderForm />\r\n    </div> )\r\n}\r\n\r\nexport default StackAdder;\r\n","import StackAdder from './StackAdder'\r\n\r\nexport default StackAdder;\r\n","import React from 'react';\r\n\r\nfunction BookListing(props){\r\n  return (<tr>\r\n    <td className='title'>{props.book.title}</td>\r\n    <td className='author'>{`${props.book.authorFirst} ${props.book.authorLast}`}</td>\r\n    <td className='year'>{props.book.publishedYear}</td>\r\n    <td className='genre'>{props.book.genre}</td>\r\n  </tr>)\r\n}\r\n\r\nexport default BookListing;\r\n","import React from 'react';\r\nimport BookListing from './BookListing';\r\n\r\nfunction BooksListDisplay(props) {\r\n  const listings = props.booksList.map(b=><BookListing book={b} />)\r\n  return(<table className=\"bookListingTable\">\r\n    <tr>\r\n      <td className='title tableHeading'>Title</td>\r\n      <td className='author tableHeading'>Author</td>\r\n      <td className='year tableHeading'>Year</td>\r\n      <td className='genre tableHeading'>Genre</td>\r\n    </tr>\r\n    {listings}\r\n  </table>)\r\n}\r\n\r\nexport default BooksListDisplay;\r\n","import BookSearch from './BookSearch';\r\n\r\nexport default BookSearch;\r\n","import React, {Component} from 'react';\r\nimport BooksListDisplay from './BooksListDisplay';\r\n\r\nclass BookSearch extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      serverResponse: '',\r\n      booksList:[],\r\n    }\r\n  }\r\n\r\n  //convert raw Array of Book Objects to an array of BookListings.\r\n\r\n  getBookList(){\r\n    const req = new XMLHttpRequest();\r\n    req.open(\"GET\",'/api/books',true);\r\n    req.onreadystatechange = () => {\r\n      if(req.readyState === 4){\r\n        const books = JSON.parse(req.responseText);\r\n        this.setState({booksList:[...books]})\r\n      }\r\n    }\r\n    req.send();\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getBookList();\r\n  }\r\n\r\n  render(){\r\n    return (<div>\r\n      <BooksListDisplay booksList={this.state.booksList} />\r\n      <div id='serverResponse'>{this.state.serverResponse}</div>\r\n      </div>)\r\n  }\r\n}\r\n\r\nexport default BookSearch;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\n// import Header     from './components/Header';\r\nimport Tabber     from './components/Tabber';\r\nimport BookAdder  from './components/BookAdder';\r\nimport StackAdder from './components/StackAdder';\r\nimport BookSearch from './components/BookSearch';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Tabber>\r\n          <BookSearch tabName = 'BookSearch' />\r\n          <StackAdder tabName = 'StackAdder' />\r\n          <BookAdder  tabName = 'BookAdder' />\r\n        </Tabber>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}